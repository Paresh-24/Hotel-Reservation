{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReservationService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:3001\";\n    this.reservation = [];\n  }\n  //CRUD\n  getReservations() {\n    return this.http.get(this.apiUrl + \"/reservations\");\n  }\n  getReservation(id) {\n    return this.http.get(this.apiUrl + \"/reservation/\" + id);\n  }\n  addReservation(reservation) {\n    reservation.id = Math.random().toString();\n    this.reservation.push(reservation);\n  }\n  deleteReservation(id) {\n    return this.http.delete(this.apiUrl + \"/reservation/\" + id);\n  }\n  updateReservation(id, updateReservation) {\n    let index = this.reservation.findIndex(res => res.id === id);\n    this.reservation[index] = updateReservation;\n  }\n  static #_ = this.ɵfac = function ReservationService_Factory(t) {\n    return new (t || ReservationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReservationService,\n    factory: ReservationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ReservationService","constructor","http","apiUrl","reservation","getReservations","get","getReservation","id","addReservation","Math","random","toString","push","deleteReservation","delete","updateReservation","index","findIndex","res","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\Hotel-Reservation\\src\\app\\reservation\\reservation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resrvation } from '../model/resrvation';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReservationService {\r\n\r\n  private apiUrl = \"http://localhost:3001\";\r\n\r\n  private reservation: Resrvation[] = [];\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n\r\n  //CRUD\r\n\r\n  getReservations(): Observable<Resrvation[]>{\r\n    return this.http.get<Resrvation[]>(this.apiUrl + \"/reservations\");\r\n  }\r\n  \r\n  getReservation(id: string): Observable<Resrvation[]>{\r\n    return this.http.get<Resrvation[]>(this.apiUrl + \"/reservation/\"+id);\r\n  }\r\n\r\n  addReservation(reservation: Resrvation): void {\r\n    reservation.id = Math.random().toString();\r\n    this.reservation.push(reservation);\r\n    \r\n  }\r\n\r\n  deleteReservation(id: string): Observable<void> {\r\n    return this.http.delete<void>(this.apiUrl + \"/reservation/\"+id);\r\n  }\r\n\r\n  updateReservation(id: string,updateReservation: Resrvation): void {\r\n    let index = this.reservation.findIndex(res => res.id === id);\r\n    this.reservation[index] = updateReservation;\r\n  }\r\n  \r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAM7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,uBAAuB;IAEhC,KAAAC,WAAW,GAAiB,EAAE;EAEA;EAGtC;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAe,IAAI,CAACH,MAAM,GAAG,eAAe,CAAC;EACnE;EAEAI,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAe,IAAI,CAACH,MAAM,GAAG,eAAe,GAACK,EAAE,CAAC;EACtE;EAEAC,cAAcA,CAACL,WAAuB;IACpCA,WAAW,CAACI,EAAE,GAAGE,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;IACzC,IAAI,CAACR,WAAW,CAACS,IAAI,CAACT,WAAW,CAAC;EAEpC;EAEAU,iBAAiBA,CAACN,EAAU;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,IAAI,CAACZ,MAAM,GAAG,eAAe,GAACK,EAAE,CAAC;EACjE;EAEAQ,iBAAiBA,CAACR,EAAU,EAACQ,iBAA6B;IACxD,IAAIC,KAAK,GAAG,IAAI,CAACb,WAAW,CAACc,SAAS,CAACC,GAAG,IAAIA,GAAG,CAACX,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAI,CAACJ,WAAW,CAACa,KAAK,CAAC,GAAGD,iBAAiB;EAC7C;EAAC,QAAAI,CAAA,G;qBAhCUpB,kBAAkB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBzB,kBAAkB;IAAA0B,OAAA,EAAlB1B,kBAAkB,CAAA2B,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}