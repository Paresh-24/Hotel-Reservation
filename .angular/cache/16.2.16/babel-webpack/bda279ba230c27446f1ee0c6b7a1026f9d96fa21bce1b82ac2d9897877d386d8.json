{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ReservationService {\n  constructor() {\n    this.reservation = [];\n  }\n  //CRUD\n  getReservations() {\n    return this.reservation;\n  }\n  getReservation(id) {\n    return this.reservation.find(res => res.id === id);\n  }\n  addReservation(reservation) {\n    reservation.id = Math.random().toString();\n    this.reservation.push(reservation);\n  }\n  deleteReservation(id) {\n    let index = this.reservation.findIndex(res => res.id === id);\n    this.reservation.splice(index, 1);\n  }\n  updateReservation(id, updateReservation) {\n    let index = this.reservation.findIndex(res => res.id === id);\n    this.reservation[index] = updateReservation;\n  }\n  static #_ = this.ɵfac = function ReservationService_Factory(t) {\n    return new (t || ReservationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReservationService,\n    factory: ReservationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ReservationService","constructor","reservation","getReservations","getReservation","id","find","res","addReservation","Math","random","toString","push","deleteReservation","index","findIndex","splice","updateReservation","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\Hotel-Reservation\\src\\app\\reservation\\reservation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resrvation } from '../model/resrvation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReservationService {\r\n\r\n  private reservation: Resrvation[] = [];\r\n\r\n\r\n  //CRUD\r\n\r\n  getReservations(): Resrvation[]{\r\n    return this.reservation;\r\n  }\r\n  \r\n  getReservation(id: string): Resrvation | undefined{\r\n    return this.reservation.find(res => res.id === id)\r\n  }\r\n\r\n  addReservation(reservation: Resrvation): void {\r\n    reservation.id = Math.random().toString();\r\n    this.reservation.push(reservation);\r\n    \r\n  }\r\n\r\n  deleteReservation(id: string): void {\r\n    let index = this.reservation.findIndex(res => res.id === id);\r\n    this.reservation.splice(index,1);\r\n  }\r\n\r\n  updateReservation(id: string,updateReservation: Resrvation): void {\r\n    let index = this.reservation.findIndex(res => res.id === id);\r\n    this.reservation[index] = updateReservation;\r\n  }\r\n  \r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAH/BC,YAAA;IAKU,KAAAC,WAAW,GAAiB,EAAE;;EAGtC;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,WAAW;EACzB;EAEAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACH,WAAW,CAACI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;EACpD;EAEAG,cAAcA,CAACN,WAAuB;IACpCA,WAAW,CAACG,EAAE,GAAGI,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;IACzC,IAAI,CAACT,WAAW,CAACU,IAAI,CAACV,WAAW,CAAC;EAEpC;EAEAW,iBAAiBA,CAACR,EAAU;IAC1B,IAAIS,KAAK,GAAG,IAAI,CAACZ,WAAW,CAACa,SAAS,CAACR,GAAG,IAAIA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAI,CAACH,WAAW,CAACc,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;EAClC;EAEAG,iBAAiBA,CAACZ,EAAU,EAACY,iBAA6B;IACxD,IAAIH,KAAK,GAAG,IAAI,CAACZ,WAAW,CAACa,SAAS,CAACR,GAAG,IAAIA,GAAG,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAI,CAACH,WAAW,CAACY,KAAK,CAAC,GAAGG,iBAAiB;EAC7C;EAAC,QAAAC,CAAA,G;qBA7BUlB,kBAAkB;EAAA;EAAA,QAAAmB,EAAA,G;WAAlBnB,kBAAkB;IAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}